{"ast":null,"code":"// ReplyThread.jsx\nimport React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import'../styles/replyThread.css';import LastReply from'./LastReply';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ReplyThread(_ref){let{messageId}=_ref;const username=sessionStorage.getItem(\"username\");const userid=sessionStorage.getItem(\"user_id\");const apiKey=sessionStorage.getItem(\"\".concat(username,\"_api_key\"));const{channelId}=useParams();const[messageDetails,setMessageDetails]=useState(null);const[reply,setReply]=useState('');useEffect(()=>{if(messageId){fetchMessageDetails();}},[messageId]);// for showing thread name and username on the top\nconst fetchMessageDetails=async()=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/messages/\".concat(messageId),{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();console.log(\"message data: \",data);if(data.Success){setMessageDetails(data.message);console.log(\"messageDetails: \",messageDetails);}else{console.log('Failed to fetch message details');}}catch(error){console.error('Error fetching message details:',error);}};const postReply=async()=>{if(!reply.trim()){alert(\"Please enter a reply.\");return;}try{const response=await fetch(\"http://127.0.0.1:5000/api/channels/\".concat(channelId,\"/messages/\").concat(messageId,\"/reply\"),{method:'POST',headers:{'Content-Type':'application/json','X-API-Key':apiKey},body:JSON.stringify({userid:userid,content:reply})});const data=await response.json();if(data.Success){console.log('Reply posted successfully');setReply('');}else{console.log('Failed to post reply:',data.error);}}catch(error){console.error('Error posting message:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"reply-thread\",children:messageDetails&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-author\",children:[messageDetails.author,\":\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:messageDetails.content})]}),/*#__PURE__*/_jsx(\"div\",{className:\"replies-container\",children:/*#__PURE__*/_jsx(LastReply,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"reply-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your reply...\",value:reply,onChange:e=>setReply(e.target.value),className:\"reply-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"send-reply-button\",onClick:postReply,children:\"Send\"})]})]})});}export default ReplyThread;","map":{"version":3,"names":["React","useEffect","useState","useParams","LastReply","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ReplyThread","_ref","messageId","username","sessionStorage","getItem","userid","apiKey","concat","channelId","messageDetails","setMessageDetails","reply","setReply","fetchMessageDetails","response","fetch","method","headers","data","json","console","log","Success","message","error","postReply","trim","alert","body","JSON","stringify","content","className","children","author","type","placeholder","value","onChange","e","target","onClick"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/ReplyThread.jsx"],"sourcesContent":["// ReplyThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/replyThread.css';\nimport LastReply from './LastReply'; \n\nfunction ReplyThread({ messageId }) {\n  const username = sessionStorage.getItem(\"username\");\n  const userid = sessionStorage.getItem(\"user_id\");\n  const apiKey = sessionStorage.getItem(`${username}_api_key`);\n\n  const { channelId } = useParams();\n  const [messageDetails, setMessageDetails] = useState(null);\n  const [reply, setReply] = useState('');\n\n\n  useEffect(() => {\n    if (messageId) {\n      fetchMessageDetails();\n    }\n  }, [messageId]);\n\n  // for showing thread name and username on the top\n  const fetchMessageDetails = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/messages/${messageId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      console.log(\"message data: \", data)\n      if (data.Success) {\n        setMessageDetails(data.message);\n        console.log(\"messageDetails: \", messageDetails )\n      } else {\n        console.log('Failed to fetch message details');\n      }\n    } catch (error) {\n      console.error('Error fetching message details:', error);\n    }\n  };\n\n\n  const postReply= async () => {\n    if (!reply.trim()) {\n        alert(\"Please enter a reply.\");\n        return;\n    }\n    try {\n        const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}/reply`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': apiKey\n            },\n            body: JSON.stringify({\n                userid: userid, \n                content: reply,\n            }),\n        });\n        const data = await response.json();\n        if (data.Success) {\n            console.log('Reply posted successfully');\n            setReply(''); \n        } else {\n            console.log('Failed to post reply:', data.error);\n        }\n    } catch (error) {\n        console.error('Error posting message:', error);\n    }\n};\n\n  return (\n    <div className=\"reply-thread\">\n      {messageDetails && (\n        <>\n          <div className=\"message-details\">\n            <div className=\"message-author\">{messageDetails.author}:</div>\n            <div className=\"message-content\">{messageDetails.content}</div>\n          </div>\n          <div className=\"replies-container\">\n            <LastReply />\n          </div>\n          <div className=\"reply-input-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Type your reply...\"\n              value={reply}\n              onChange={(e) => setReply(e.target.value)}\n              className=\"reply-input\"\n            />\n            <button className=\"send-reply-button\" onClick={postReply}>Send</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ReplyThread;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,2BAA2B,CAClC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEpC,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAgB,IAAf,CAAEC,SAAU,CAAC,CAAAD,IAAA,CAChC,KAAM,CAAAE,QAAQ,CAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CACnD,KAAM,CAAAC,MAAM,CAAGF,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,CAChD,KAAM,CAAAE,MAAM,CAAGH,cAAc,CAACC,OAAO,IAAAG,MAAA,CAAIL,QAAQ,YAAU,CAAC,CAE5D,KAAM,CAAEM,SAAU,CAAC,CAAGjB,SAAS,CAAC,CAAC,CACjC,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAGtCD,SAAS,CAAC,IAAM,CACd,GAAIY,SAAS,CAAE,CACbY,mBAAmB,CAAC,CAAC,CACvB,CACF,CAAC,CAAE,CAACZ,SAAS,CAAC,CAAC,CAEf;AACA,KAAM,CAAAY,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,uCAAAR,MAAA,CAAuCN,SAAS,EAAI,CAC9Ee,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEH,IAAI,CAAC,CACnC,GAAIA,IAAI,CAACI,OAAO,CAAE,CAChBZ,iBAAiB,CAACQ,IAAI,CAACK,OAAO,CAAC,CAC/BH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEZ,cAAe,CAAC,CAClD,CAAC,IAAM,CACLW,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CACF,CAAE,MAAOG,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAGD,KAAM,CAAAC,SAAS,CAAE,KAAAA,CAAA,GAAY,CAC3B,GAAI,CAACd,KAAK,CAACe,IAAI,CAAC,CAAC,CAAE,CACfC,KAAK,CAAC,uBAAuB,CAAC,CAC9B,OACJ,CACA,GAAI,CACA,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,uCAAAR,MAAA,CAAuCC,SAAS,eAAAD,MAAA,CAAaN,SAAS,WAAU,CACxGe,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,WAAW,CAAEX,MACjB,CAAC,CACDsB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBzB,MAAM,CAAEA,MAAM,CACd0B,OAAO,CAAEpB,KACb,CAAC,CACL,CAAC,CAAC,CACF,KAAM,CAAAO,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACI,OAAO,CAAE,CACdF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxCT,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAC,IAAM,CACHQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEH,IAAI,CAACM,KAAK,CAAC,CACpD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAClD,CACJ,CAAC,CAEC,mBACE5B,IAAA,QAAKoC,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BxB,cAAc,eACbf,KAAA,CAAAI,SAAA,EAAAmC,QAAA,eACEvC,KAAA,QAAKsC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BvC,KAAA,QAAKsC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAExB,cAAc,CAACyB,MAAM,CAAC,GAAC,EAAK,CAAC,cAC9DtC,IAAA,QAAKoC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAExB,cAAc,CAACsB,OAAO,CAAM,CAAC,EAC5D,CAAC,cACNnC,IAAA,QAAKoC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCrC,IAAA,CAACJ,SAAS,GAAE,CAAC,CACV,CAAC,cACNE,KAAA,QAAKsC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCrC,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,oBAAoB,CAChCC,KAAK,CAAE1B,KAAM,CACb2B,QAAQ,CAAGC,CAAC,EAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CL,SAAS,CAAC,aAAa,CACxB,CAAC,cACFpC,IAAA,WAAQoC,SAAS,CAAC,mBAAmB,CAACS,OAAO,CAAEhB,SAAU,CAAAQ,QAAA,CAAC,MAAI,CAAQ,CAAC,EACpE,CAAC,EACN,CACH,CACE,CAAC,CAEV,CAEA,cAAe,CAAAlC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}