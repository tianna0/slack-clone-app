{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import NavBar from './NavBar';\n// // import '../styles/userHome.css'; \n\n// function Profile() {\n//     const username = sessionStorage.getItem(\"username\"); \n\n//     return (\n//         <div className=\"profile-container\">\n//           <NavBar username={username} /> \n//           <h1>This is the Profile</h1>\n//         </div>\n//       );\n// }\n\n// export default Profile;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\n// import '../styles/userHome.css'; \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [newName, setNewName] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const username = sessionStorage.getItem(\"username\");\n  const apiKey = sessionStorage.getItem(`${username}_api_key`); // Assuming the API key is stored in sessionStorage\n\n  const updateUsername = async e => {\n    e.preventDefault(); // Prevent the form from causing a page reload\n    if (!newName) {\n      setMessage(\"Please enter a new username.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/update_username', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          api_key: apiKey,\n          new_name: newName\n        })\n      });\n      const data = await response.json();\n      console.log(\"session: \", sessionStorage);\n      setMessage(data.message);\n      if (data.success) {\n        // Optionally, update the username in sessionStorage and navigate the user away\n        sessionStorage.setItem(\"username\", newName);\n        // navigate('/some-other-page'); // Redirect the user to another page if needed\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setMessage(\"Failed to update username. Please try again.\");\n    }\n  };\n  const updatePassword = async e => {\n    e.preventDefault();\n    if (!newPassword || !confirmPassword || newPassword !== confirmPassword) {\n      setMessage(\"Passwords do not match or are missing.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/update_password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          api_key: apiKey,\n          new_password: newPassword,\n          confirm_password: confirmPassword\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message);\n      if (data.success) {\n        console.log(\"success updated password\");\n        // Handle successful password update, e.g., clear form, redirect, etc.\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n      setMessage(\"Failed to update password. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is the Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateUsername,\n      className: \"update-username-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newName,\n          onChange: e => setNewName(e.target.value),\n          placeholder: \"Enter new username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePassword,\n      className: \"update-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"lK5kdmyjhHA30HN8hpqhbJudtC4=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","jsxDEV","_jsxDEV","Profile","_s","newName","setNewName","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","username","sessionStorage","getItem","apiKey","updateUsername","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","api_key","new_name","data","json","console","log","success","setItem","error","updatePassword","new_password","confirm_password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/Profile.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import NavBar from './NavBar';\n// // import '../styles/userHome.css'; \n\n// function Profile() {\n//     const username = sessionStorage.getItem(\"username\"); \n\n//     return (\n//         <div className=\"profile-container\">\n//           <NavBar username={username} /> \n//           <h1>This is the Profile</h1>\n//         </div>\n//       );\n// }\n\n// export default Profile;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\n// import '../styles/userHome.css'; \n\nfunction Profile() {\n    const [newName, setNewName] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const navigate = useNavigate();\n\n    const username = sessionStorage.getItem(\"username\");\n    const apiKey = sessionStorage.getItem(`${username}_api_key`); // Assuming the API key is stored in sessionStorage\n\n    const updateUsername = async (e) => {\n        e.preventDefault(); // Prevent the form from causing a page reload\n        if (!newName) {\n            setMessage(\"Please enter a new username.\");\n            return;\n        }\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/update_username', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    api_key: apiKey,\n                    new_name: newName,\n                }),\n            });\n\n            const data = await response.json();\n            console.log(\"session: \", sessionStorage)\n            setMessage(data.message);\n            if (data.success) {\n                // Optionally, update the username in sessionStorage and navigate the user away\n                sessionStorage.setItem(\"username\", newName);\n                // navigate('/some-other-page'); // Redirect the user to another page if needed\n            }\n        } catch (error) {\n            console.error('Error updating username:', error);\n            setMessage(\"Failed to update username. Please try again.\");\n        }\n    };\n\n\n    const updatePassword = async (e) => {\n      e.preventDefault();\n      if (!newPassword || !confirmPassword || newPassword !== confirmPassword) {\n          setMessage(\"Passwords do not match or are missing.\");\n          return;\n      }\n      try {\n          const response = await fetch('http://127.0.0.1:5000/api/update_password', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                  api_key: apiKey,\n                  new_password: newPassword,\n                  confirm_password: confirmPassword,\n              }),\n          });\n\n          const data = await response.json();\n          setMessage(data.message);\n          if (data.success) {\n              console.log(\"success updated password\")\n              // Handle successful password update, e.g., clear form, redirect, etc.\n          }\n      } catch (error) {\n          console.error('Error updating password:', error);\n          setMessage(\"Failed to update password. Please try again.\");\n      }\n  };\n\n\n    return (\n        <div className=\"profile-container\">\n            <NavBar username={username} />\n            <h1>This is the Profile</h1>\n            <form onSubmit={updateUsername} className=\"update-username-form\">\n                <label>\n                    New Username:\n                    <input\n                        type=\"text\"\n                        value={newName}\n                        onChange={(e) => setNewName(e.target.value)}\n                        placeholder=\"Enter new username\"\n                    />\n                </label>\n                <button type=\"submit\">Update Username</button>\n            </form>\n            <form onSubmit={updatePassword} className=\"update-password-form\">\n                <label>\n                    New Password:\n                    <input\n                        type=\"password\"\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                        placeholder=\"New password\"\n                    />\n                </label>\n                <label>\n                    Confirm Password:\n                    <input\n                        type=\"password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        placeholder=\"Confirm new password\"\n                    />\n                </label>\n                <button type=\"submit\">Update Password</button>\n            </form>\n            {message && <p>{message}</p>}\n        </div>\n    );\n}\n\nexport default Profile;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EACnD,MAAMC,MAAM,GAAGF,cAAc,CAACC,OAAO,CAAE,GAAEF,QAAS,UAAS,CAAC,CAAC,CAAC;;EAE9D,MAAMI,cAAc,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAACf,OAAO,EAAE;MACVO,UAAU,CAAC,8BAA8B,CAAC;MAC1C;IACJ;IACA,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,OAAO,EAAEX,MAAM;UACfY,QAAQ,EAAExB;QACd,CAAC;MACL,CAAC,CAAC;MAEF,MAAMyB,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAElB,cAAc,CAAC;MACxCH,UAAU,CAACkB,IAAI,CAACnB,OAAO,CAAC;MACxB,IAAImB,IAAI,CAACI,OAAO,EAAE;QACd;QACAnB,cAAc,CAACoB,OAAO,CAAC,UAAU,EAAE9B,OAAO,CAAC;QAC3C;MACJ;IACJ,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDxB,UAAU,CAAC,8CAA8C,CAAC;IAC9D;EACJ,CAAC;EAGD,MAAMyB,cAAc,GAAG,MAAOlB,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACb,WAAW,IAAI,CAACE,eAAe,IAAIF,WAAW,KAAKE,eAAe,EAAE;MACrEG,UAAU,CAAC,wCAAwC,CAAC;MACpD;IACJ;IACA,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,OAAO,EAAEX,MAAM;UACfqB,YAAY,EAAE/B,WAAW;UACzBgC,gBAAgB,EAAE9B;QACtB,CAAC;MACL,CAAC,CAAC;MAEF,MAAMqB,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCnB,UAAU,CAACkB,IAAI,CAACnB,OAAO,CAAC;MACxB,IAAImB,IAAI,CAACI,OAAO,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;MACJ;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDxB,UAAU,CAAC,8CAA8C,CAAC;IAC9D;EACJ,CAAC;EAGC,oBACIV,OAAA;IAAKsC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BvC,OAAA,CAACF,MAAM;MAACc,QAAQ,EAAEA;IAAS;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9B3C,OAAA;MAAAuC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3C,OAAA;MAAM4C,QAAQ,EAAE5B,cAAe;MAACsB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAC5DvC,OAAA;QAAAuC,QAAA,GAAO,eAEH,eAAAvC,OAAA;UACI6C,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE3C,OAAQ;UACf4C,QAAQ,EAAG9B,CAAC,IAAKb,UAAU,CAACa,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;UAC5CG,WAAW,EAAC;QAAoB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR3C,OAAA;QAAQ6C,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACP3C,OAAA;MAAM4C,QAAQ,EAAET,cAAe;MAACG,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAC5DvC,OAAA;QAAAuC,QAAA,GAAO,eAEH,eAAAvC,OAAA;UACI6C,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEzC,WAAY;UACnB0C,QAAQ,EAAG9B,CAAC,IAAKX,cAAc,CAACW,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;UAChDG,WAAW,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR3C,OAAA;QAAAuC,QAAA,GAAO,mBAEH,eAAAvC,OAAA;UACI6C,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEvC,eAAgB;UACvBwC,QAAQ,EAAG9B,CAAC,IAAKT,kBAAkB,CAACS,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;UACpDG,WAAW,EAAC;QAAsB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR3C,OAAA;QAAQ6C,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EACNlC,OAAO,iBAAIT,OAAA;MAAAuC,QAAA,EAAI9B;IAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd;AAACzC,EAAA,CAnHQD,OAAO;EAAA,QAKKJ,WAAW;AAAA;AAAAqD,EAAA,GALvBjD,OAAO;AAqHhB,eAAeA,OAAO;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}