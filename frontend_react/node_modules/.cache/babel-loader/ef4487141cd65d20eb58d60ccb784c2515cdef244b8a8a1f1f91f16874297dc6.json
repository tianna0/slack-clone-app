{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/ChannelContent.jsx\",\n  _s = $RefreshSig$();\n// ChannelContent.jsx\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport ChannelList from './ChannelList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChannelContent() {\n  _s();\n  const username = sessionStorage.getItem(\"username\");\n  const {\n    channelId\n  } = useParams(); // 从URL中获取channelName参数\n  const [channelName, setChannelName] = useState('');\n  useEffect(() => {\n    fetchChannelDetails();\n  }, [channelId]); // 当channelId变化时重新执行\n\n  const fetchChannelDetails = async () => {\n    try {\n      // 注意更新URL以包含实际的channelId\n      const response = await fetch(`http://127.0.0.1:5000/api/channel/${channelId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (data.Success) {\n        // 假设返回的频道详情在data.message中\n        console.log(\"channel data: \", data);\n        setChannelName(data.message.name); // 根据返回的数据结构设置频道名称\n      } else {\n        console.log('Channel not found');\n      }\n    } catch (error) {\n      console.error('Error fetching channel details:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Channel : \", channelName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"post-message-button\",\n            onClick: postMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-thread\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Message Thread: Empty Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ChannelContent, \"cLs8Olz9d2GXaxZjC0h7amsYU3Y=\", false, function () {\n  return [useParams];\n});\n_c = ChannelContent;\nexport default ChannelContent;\nvar _c;\n$RefreshReg$(_c, \"ChannelContent\");","map":{"version":3,"names":["React","useParams","NavBar","ChannelList","jsxDEV","_jsxDEV","ChannelContent","_s","username","sessionStorage","getItem","channelId","channelName","setChannelName","useState","useEffect","fetchChannelDetails","response","fetch","method","headers","data","json","Success","console","log","message","name","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","postMessage","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/ChannelContent.jsx"],"sourcesContent":["// ChannelContent.jsx\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport ChannelList from './ChannelList';\n\nfunction ChannelContent() {\n    const username = sessionStorage.getItem(\"username\");\n    const { channelId } = useParams(); // 从URL中获取channelName参数\n    const [channelName, setChannelName] = useState('');\n\n    useEffect(() => {\n        fetchChannelDetails();\n    }, [channelId]); // 当channelId变化时重新执行\n\n    const fetchChannelDetails = async () => {\n        try {\n            // 注意更新URL以包含实际的channelId\n            const response = await fetch(`http://127.0.0.1:5000/api/channel/${channelId}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const data = await response.json();\n            if (data.Success) {\n                // 假设返回的频道详情在data.message中\n                console.log(\"channel data: \", data)\n                setChannelName(data.message.name); // 根据返回的数据结构设置频道名称\n            } else {\n                console.log('Channel not found');\n            }\n        } catch (error) {\n            console.error('Error fetching channel details:', error);\n        }\n    };\n\n\n    return (\n        <div className=\"home-container\">\n        <NavBar username={username} />\n        <div className=\"main-content\">\n            <ChannelList />\n            <div className=\"channel-content\">\n            {/* 显示频道名称 */}\n            <h2>Channel : {channelName}</h2>\n                <div className=\"message-input-container\">\n                    <input type=\"text\" placeholder=\"Type a message...\" className=\"message-input\" />\n                    <button className=\"post-message-button\" onClick={postMessage}>Send</button>\n                </div>\n            </div>\n            <div className=\"message-thread\">\n            {/* Placeholder for message thread content */}\n            <h3>Message Thread: Empty Message</h3>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default ChannelContent;\n\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EACnD,MAAM;IAAEC;EAAU,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZC,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,MAAMK,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCP,SAAU,EAAC,EAAE;QAC3EQ,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QACd;QACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;QACnCR,cAAc,CAACQ,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;MACvC,CAAC,MAAM;QACHH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAGD,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC/BzB,OAAA,CAACH,MAAM;MAACM,QAAQ,EAAEA;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9B7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBzB,OAAA,CAACF,WAAW;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACf7B,OAAA;QAAKwB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAEhCzB,OAAA;UAAAyB,QAAA,GAAI,YAAU,EAAClB,WAAW;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5B7B,OAAA;UAAKwB,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACpCzB,OAAA;YAAO8B,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,mBAAmB;YAACP,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/E7B,OAAA;YAAQwB,SAAS,EAAC,qBAAqB;YAACQ,OAAO,EAAEC,WAAY;YAAAR,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN7B,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAE/BzB,OAAA;UAAAyB,QAAA,EAAI;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC3B,EAAA,CApDQD,cAAc;EAAA,QAEGL,SAAS;AAAA;AAAAsC,EAAA,GAF1BjC,cAAc;AAsDvB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}