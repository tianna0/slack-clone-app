{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/MessageThread.jsx\",\n  _s = $RefreshSig$();\n// MessageThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport '../styles/messageThread.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageThread() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    channelId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const userid = sessionStorage.getItem(\"user_id\");\n  useEffect(() => {\n    fetchMessages();\n    const intervalId = setInterval(fetchMessages, 500);\n    return () => clearInterval(intervalId);\n  }, [channelId]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      // console.log(\"data: \", data);\n      if (data.Success) {\n        setMessages(data.message);\n      } else {\n        console.log('Failed to fetch messages');\n      }\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const handleMessageClick = message => {\n    console.log(\"Clicked message:\", message.content);\n    navigate(`/channel/${channelId}/message/${message.id}`);\n  };\n  const reactionTrack = async (emoji, replyMessageId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/reactions/post`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userid,\n          message_id: replyMessageId,\n          emoji: emoji\n        })\n      });\n      const data = await response.json();\n      if (data.Success) {\n        console.log(\"Reactions stored successfully: \", data.error);\n      } else {\n        console.log(\"Failed to save reactions\");\n      }\n    } catch (error) {\n      console.error('Error saving reactions: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-thread\",\n    children: messages.length > 0 ? messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      onClick: () => handleMessageClick(message),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-author\",\n          children: [message.author, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), message.replies_count !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-replies_count\",\n          children: [message.replies_count, \" Replies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-emojis\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji\",\n          onClick: () => reactionTrack(\"boom\", message.id),\n          children: \"\\uD83E\\uDD2F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji\",\n          onClick: () => reactionTrack(\"hell\", message.id),\n          children: \"\\uD83D\\uDC7F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No messages in this thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageThread, \"7j+v1gmngLMGmivbQixi2MWC+NU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MessageThread;\nexport default MessageThread;\nvar _c;\n$RefreshReg$(_c, \"MessageThread\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","MessageThread","_s","navigate","channelId","messages","setMessages","userid","sessionStorage","getItem","fetchMessages","intervalId","setInterval","clearInterval","response","fetch","method","headers","data","json","Success","message","console","log","error","handleMessageClick","content","id","reactionTrack","emoji","replyMessageId","body","JSON","stringify","user_id","message_id","className","children","length","map","onClick","author","fileName","_jsxFileName","lineNumber","columnNumber","replies_count","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/MessageThread.jsx"],"sourcesContent":["// MessageThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport '../styles/messageThread.css';\n\nfunction MessageThread() {\n  const navigate = useNavigate();\n  const { channelId } = useParams(); \n  const [messages, setMessages] = useState([]); \n  const userid = sessionStorage.getItem(\"user_id\");\n\n  useEffect(() => {\n    fetchMessages();\n\n    const intervalId = setInterval(fetchMessages, 500);\n    return () => clearInterval(intervalId);\n  }, [channelId]); \n\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      // console.log(\"data: \", data);\n      if (data.Success) {\n        setMessages(data.message); \n      } else {\n        console.log('Failed to fetch messages');\n      }\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const handleMessageClick = (message) => {\n    console.log(\"Clicked message:\", message.content);\n    navigate(`/channel/${channelId}/message/${message.id}`);\n  };\n\n\n  const reactionTrack = async (emoji, replyMessageId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/reactions/post`,{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: userid,\n          message_id: replyMessageId,\n          emoji: emoji\n        }),\n      });\n      const data = await response.json();\n      if (data.Success) {\n        console.log(\"Reactions stored successfully: \", data.error);\n      } else {\n        console.log(\"Failed to save reactions\")\n      }\n    } catch (error) {\n      console.error('Error saving reactions: ', error);\n    }\n  };\n\n  return (\n    <div className=\"message-thread\">\n      {messages.length > 0 ? (\n        messages.map((message) => (\n          <div key={message.id} className=\"message\" onClick={() => handleMessageClick(message)}>\n            <div className=\"message-details\">\n              <div className=\"message-author\">{message.author}:</div>\n              <div className=\"message-content\">{message.content}</div>\n              {message.replies_count !== 0 && (\n                <div className=\"message-replies_count\">{message.replies_count} Replies</div>\n              )}\n            </div>\n            <div className=\"message-emojis\">\n              <button className='emoji' onClick={() => reactionTrack(\"boom\", message.id)}>ðŸ¤¯</button>\n              <button className='emoji' onClick={() => reactionTrack(\"hell\", message.id)}>ðŸ‘¿</button>\n            </div>\n          </div>\n        ))\n      ) : (\n        <h3>No messages in this thread</h3>\n      )}\n    </div>\n  );\n}\n\nexport default MessageThread;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}