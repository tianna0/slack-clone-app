{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/UserHome.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import NavBar from './NavBar';\n// // import '../styles/userHome.css'; // 假设您的样式文件名为 navBar.css\n\n// function UserHome() {\n//     const username = sessionStorage.getItem(\"username\"); // 假设从状态或 props 中获取用户名\n\n//     return (\n//         <div className=\"home-container\">\n//           <NavBar username={username} /> {/* 使用 NavBar 组件 */}\n//           <h1>This is the UserHome</h1>\n//         </div>\n//       );\n// }\n\n// export default UserHome;\n\n// async function testtest(event) {\n//   try {\n//     const response = await fetch('http://127.0.0.1:5000/api/channels', {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//     });\n//     const data = await response.json();\n//     console.log(\"Display Channels: \", data)\n//     if (data.Success) {\n//       console.log('Display Chennels Success:', data);\n//       // navigate('/home'); \n//     } else {\n//       console.log('Display failed');\n//     }\n//   } catch (error) {\n//     console.error('Error during dislplay channels:', error);\n//   }\n//   // navigate('/home'); \n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/userHome.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const username = sessionStorage.getItem(\"username\"); // 假设从 sessionStorage 获取用户名\n\n  useEffect(() => {\n    // 使用 fetch API 获取 channels\n    fetch('/api/channels').then(response => response.json()).then(data => {\n      if (data.Success) {\n        setChannels(data.channels);\n      } else {\n        console.error('Failed to fetch channels');\n      }\n    }).catch(error => console.error('Error fetching channels:', error));\n  }, []); // 空依赖数组表示这个effect只在组件挂载时运行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-list\",\n        children: channels.map(channel => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel\",\n          children: channel.name\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Channel Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(UserHome, \"MEXUtmfwu4/eJAvHrnimD0/z+mI=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","NavBar","jsxDEV","_jsxDEV","UserHome","_s","channels","setChannels","username","sessionStorage","getItem","fetch","then","response","json","data","Success","console","error","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","channel","name","id","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/UserHome.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import NavBar from './NavBar';\n// // import '../styles/userHome.css'; // 假设您的样式文件名为 navBar.css\n\n// function UserHome() {\n//     const username = sessionStorage.getItem(\"username\"); // 假设从状态或 props 中获取用户名\n\n//     return (\n//         <div className=\"home-container\">\n//           <NavBar username={username} /> {/* 使用 NavBar 组件 */}\n//           <h1>This is the UserHome</h1>\n//         </div>\n//       );\n// }\n\n// export default UserHome;\n\n\n// async function testtest(event) {\n//   try {\n//     const response = await fetch('http://127.0.0.1:5000/api/channels', {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//     });\n//     const data = await response.json();\n//     console.log(\"Display Channels: \", data)\n//     if (data.Success) {\n//       console.log('Display Chennels Success:', data);\n//       // navigate('/home'); \n//     } else {\n//       console.log('Display failed');\n//     }\n//   } catch (error) {\n//     console.error('Error during dislplay channels:', error);\n//   }\n//   // navigate('/home'); \n// }\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/userHome.css';\n\nfunction UserHome() {\n    const [channels, setChannels] = useState([]);\n    const username = sessionStorage.getItem(\"username\"); // 假设从 sessionStorage 获取用户名\n\n    useEffect(() => {\n        // 使用 fetch API 获取 channels\n        fetch('/api/channels')\n            .then(response => response.json())\n            .then(data => {\n                if(data.Success) {\n                    setChannels(data.channels);\n                } else {\n                    console.error('Failed to fetch channels');\n                }\n            })\n            .catch(error => console.error('Error fetching channels:', error));\n    }, []); // 空依赖数组表示这个effect只在组件挂载时运行一次\n\n    return (\n        <div className=\"home-container\">\n            <NavBar username={username} />\n            <div className=\"main-content\">\n                <div className=\"channel-list\">\n                    {channels.map(channel => (\n                        <div key={channel.id} className=\"channel\">\n                            {channel.name}\n                        </div>\n                    ))}\n                </div>\n                <div className=\"channel-content\">\n                    {/* Channel content will go here */}\n                    <h2>Channel Content</h2>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserHome;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;EAErDX,SAAS,CAAC,MAAM;IACZ;IACAY,KAAK,CAAC,eAAe,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAGA,IAAI,CAACC,OAAO,EAAE;QACbT,WAAW,CAACQ,IAAI,CAACT,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACHW,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACJ,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIf,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BlB,OAAA,CAACF,MAAM;MAACO,QAAQ,EAAEA;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BtB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBlB,OAAA;QAAKiB,SAAS,EAAC,cAAc;QAAAC,QAAA,EACxBf,QAAQ,CAACoB,GAAG,CAACC,OAAO,iBACjBxB,OAAA;UAAsBiB,SAAS,EAAC,SAAS;UAAAC,QAAA,EACpCM,OAAO,CAACC;QAAI,GADPD,OAAO,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtB,OAAA;QAAKiB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAE5BlB,OAAA;UAAAkB,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpB,EAAA,CApCQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}