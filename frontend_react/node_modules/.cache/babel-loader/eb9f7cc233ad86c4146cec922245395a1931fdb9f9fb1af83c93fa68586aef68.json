{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/App.js\",\n  _s = $RefreshSig$();\n// // App.jsx\n// import React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from 'react-router-dom';\n// import LoginPage from './components/Login';\n// import UserHome from './components/UserHome';\n// import Profile from './components/Profile';\n// import CreateChannel from './components/CreateChannel';\n// import ChannelContent from './components/ChannelContent'; \n\n// const App = () => {\n//   // state for if user is logged in or not\n//   const [userLoggedIn, setLoggedIn] = React.useState(\n//     () => sessionStorage.getItem(\"user_id\") != null\n//   );\n\n//   // handler for logged in or registered users\n//   function SetLogin() {\n//     setLoggedIn(true);\n//   }\n\n//   return (\n//     <Router>\n//       <Routes>\n//         {/* don't need to log in */}\n//         <Route path=\"/\" element={<LoginPage onLoginClick={SetLogin}/>} />\n//         <Route path=\"/login\" element={<LoginPage onLoginClick={SetLogin}/>} />\n\n//         {/* need user log in  */}\n//         <Route path=\"/home\" element={<UserHome />} />\n//         <Route path=\"/profile\" element={<Profile />} />\n//         <Route path=\"/createChannel\" element={<CreateChannel />} />\n//         <Route path=\"/channel/:channelId\" element={<ChannelContent />} />\n//         <Route path=\"/channel/:channelId/message/:messageId\" element={<ChannelContent />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginPage from './components/Login';\nimport UserHome from './components/UserHome';\nimport Profile from './components/Profile';\nimport CreateChannel from './components/CreateChannel';\nimport ChannelContent from './components/ChannelContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userLoggedIn, setUserLoggedIn] = useState(sessionStorage.getItem(\"user_id\") != null);\n\n  // handler for logged in or registered users\n  function setLogin() {\n    setUserLoggedIn(true);\n    // sessionStorage.setItem(\"user_id\", \"your_user_id\"); // Set a real user id after login\n  }\n  useEffect(() => {\n    // This effect runs once on mount to check if the user is logged in\n    const loggedIn = sessionStorage.getItem(\"user_id\") != null;\n    setUserLoggedIn(loggedIn);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLoginClick: setLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: userLoggedIn ? \"/home\" : \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: userLoggedIn ? /*#__PURE__*/_jsxDEV(UserHome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: userLoggedIn ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/createChannel\",\n        element: userLoggedIn ? /*#__PURE__*/_jsxDEV(CreateChannel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/channel/:channelId\",\n        element: userLoggedIn ? /*#__PURE__*/_jsxDEV(ChannelContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 67\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/channel/:channelId/message/:messageId\",\n        element: userLoggedIn ? /*#__PURE__*/_jsxDEV(ChannelContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 86\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 107\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: userLoggedIn ? \"/home\" : \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ctIytSfl4Rx650NiI6UC/ekGrI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","LoginPage","UserHome","Profile","CreateChannel","ChannelContent","jsxDEV","_jsxDEV","App","_s","userLoggedIn","setUserLoggedIn","sessionStorage","getItem","setLogin","loggedIn","children","path","element","onLoginClick","fileName","_jsxFileName","lineNumber","columnNumber","replace","to","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/App.js"],"sourcesContent":["// // App.jsx\n// import React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from 'react-router-dom';\n// import LoginPage from './components/Login';\n// import UserHome from './components/UserHome';\n// import Profile from './components/Profile';\n// import CreateChannel from './components/CreateChannel';\n// import ChannelContent from './components/ChannelContent'; \n\n// const App = () => {\n//   // state for if user is logged in or not\n//   const [userLoggedIn, setLoggedIn] = React.useState(\n//     () => sessionStorage.getItem(\"user_id\") != null\n//   );\n\n//   // handler for logged in or registered users\n//   function SetLogin() {\n//     setLoggedIn(true);\n//   }\n\n//   return (\n//     <Router>\n//       <Routes>\n//         {/* don't need to log in */}\n//         <Route path=\"/\" element={<LoginPage onLoginClick={SetLogin}/>} />\n//         <Route path=\"/login\" element={<LoginPage onLoginClick={SetLogin}/>} />\n        \n//         {/* need user log in  */}\n//         <Route path=\"/home\" element={<UserHome />} />\n//         <Route path=\"/profile\" element={<Profile />} />\n//         <Route path=\"/createChannel\" element={<CreateChannel />} />\n//         <Route path=\"/channel/:channelId\" element={<ChannelContent />} />\n//         <Route path=\"/channel/:channelId/message/:messageId\" element={<ChannelContent />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport LoginPage from './components/Login';\nimport UserHome from './components/UserHome';\nimport Profile from './components/Profile';\nimport CreateChannel from './components/CreateChannel';\nimport ChannelContent from './components/ChannelContent';\n\nconst App = () => {\n  const [userLoggedIn, setUserLoggedIn] = useState(sessionStorage.getItem(\"user_id\") != null);\n\n  // handler for logged in or registered users\n  function setLogin() {\n    setUserLoggedIn(true);\n    // sessionStorage.setItem(\"user_id\", \"your_user_id\"); // Set a real user id after login\n  }\n\n  useEffect(() => {\n    // This effect runs once on mount to check if the user is logged in\n    const loggedIn = sessionStorage.getItem(\"user_id\") != null;\n    setUserLoggedIn(loggedIn);\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        {/* Routes that do not require login */}\n        <Route path=\"/login\" element={<LoginPage onLoginClick={setLogin} />} />\n        <Route path=\"/\" element={<Navigate replace to={userLoggedIn ? \"/home\" : \"/login\"} />} />\n\n        {/* Protected routes that require login */}\n        <Route path=\"/home\" element={userLoggedIn ? <UserHome /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/profile\" element={userLoggedIn ? <Profile /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/createChannel\" element={userLoggedIn ? <CreateChannel /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/channel/:channelId\" element={userLoggedIn ? <ChannelContent /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/channel/:channelId/message/:messageId\" element={userLoggedIn ? <ChannelContent /> : <Navigate replace to=\"/login\" />} />\n\n        {/* Redirect all other paths to home if logged in, or login page if not */}\n        <Route path=\"*\" element={<Navigate replace to={userLoggedIn ? \"/home\" : \"/login\"} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}