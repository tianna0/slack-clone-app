{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/CreateChannel.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import NavBar from './NavBar';\n// // import '../styles/userHome.css'; \n\n// function CreateChannel() {\n//     const username = sessionStorage.getItem(\"username\"); // 假设从状态或 props 中获取用户名\n\n//     return (\n//         <div className=\"channel-container\">\n//           <NavBar username={username} /> {/* 使用 NavBar 组件 */}\n//           <h1>This is the Channel</h1>\n//         </div>\n//       );\n// }\n\n// export default CreateChannel;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/createChannel.css'; // 假设您将为此组件创建一个新的样式文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateChannel() {\n  _s();\n  const navigate = useNavigate();\n  const username = sessionStorage.getItem(\"username\");\n  const [channelName, setChannelName] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log('Creating channel with name:', channelName);\n    // 在这里添加创建频道的 API 请求逻辑\n\n    // 假设创建成功后导航到频道列表或新创建的频道页面\n    // navigate('/channels');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-channel-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"channelName\",\n            children: \"Channel Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"channelName\",\n            type: \"text\",\n            value: channelName,\n            onChange: e => setChannelName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateChannel, \"MugMOAfo1sEpC7CbT1pStXL+VoQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateChannel;\nexport default CreateChannel;\nvar _c;\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","jsxDEV","_jsxDEV","CreateChannel","_s","navigate","username","sessionStorage","getItem","channelName","setChannelName","handleSubmit","event","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/CreateChannel.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import NavBar from './NavBar';\n// // import '../styles/userHome.css'; \n\n\n// function CreateChannel() {\n//     const username = sessionStorage.getItem(\"username\"); // 假设从状态或 props 中获取用户名\n    \n\n//     return (\n//         <div className=\"channel-container\">\n//           <NavBar username={username} /> {/* 使用 NavBar 组件 */}\n//           <h1>This is the Channel</h1>\n//         </div>\n//       );\n// }\n\n// export default CreateChannel;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/createChannel.css'; // 假设您将为此组件创建一个新的样式文件\n\nfunction CreateChannel() {\n    const navigate = useNavigate();\n    const username = sessionStorage.getItem(\"username\");\n    const [channelName, setChannelName] = useState('');\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log('Creating channel with name:', channelName);\n        // 在这里添加创建频道的 API 请求逻辑\n        \n        // 假设创建成功后导航到频道列表或新创建的频道页面\n        // navigate('/channels');\n    }\n\n    return (\n        <div className=\"channel-container\">\n            <NavBar username={username} />\n            <div className=\"create-channel-form\">\n                <h1>Create Channel</h1>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelName\">Channel Name:</label>\n                        <input\n                            id=\"channelName\"\n                            type=\"text\"\n                            value={channelName}\n                            onChange={(e) => setChannelName(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"submit-button\">Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateChannel;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,eAAea,YAAYA,CAACC,KAAK,EAAE;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEN,WAAW,CAAC;IACvD;;IAEA;IACA;EACJ;EAEA,oBACIP,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bf,OAAA,CAACF,MAAM;MAACM,QAAQ,EAAEA;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BnB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCf,OAAA;QAAAe,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBnB,OAAA;QAAMoB,QAAQ,EAAEX,YAAa;QAAAM,QAAA,gBACzBf,OAAA;UAAKc,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBf,OAAA;YAAOqB,OAAO,EAAC,aAAa;YAAAN,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClDnB,OAAA;YACIsB,EAAE,EAAC,aAAa;YAChBC,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEjB,WAAY;YACnBkB,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAChDI,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNnB,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACT,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CAnCQD,aAAa;EAAA,QACDJ,WAAW;AAAA;AAAAgC,EAAA,GADvB5B,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}