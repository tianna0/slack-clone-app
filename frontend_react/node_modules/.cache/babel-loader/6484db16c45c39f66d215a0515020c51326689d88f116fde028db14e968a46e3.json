{"ast":null,"code":"// MessageThread.jsx\nimport React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{useParams}from'react-router-dom';import'../styles/messageThread.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function MessageThread(){const navigate=useNavigate();const{channelId}=useParams();const[messages,setMessages]=useState([]);const userid=sessionStorage.getItem(\"user_id\");useEffect(()=>{fetchMessages();const intervalId=setInterval(fetchMessages,5000);return()=>clearInterval(intervalId);},[channelId]);const fetchMessages=async()=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/channels/\".concat(channelId,\"/messages\"),{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();// console.log(\"data: \", data);\nif(data.Success){setMessages(data.message);}else{console.log('Failed to fetch messages');}}catch(error){console.error('Error fetching messages:',error);}};const handleMessageClick=message=>{console.log(\"Clicked message:\",message.content);navigate(\"/channel/\".concat(channelId,\"/message/\").concat(message.id));};const reactionTrack=async(emoji,replyMessageId)=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/reactions/post\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:userid,message_id:replyMessageId,emoji:emoji})});const data=await response.json();if(data.Success){console.log(\"Reactions stored successfully: \",data.error);}else{console.log(\"Failed to save reactions\");}}catch(error){console.error('Error saving reactions: ',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"message-thread\",children:messages.length>0?messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:\"message\",onClick:()=>handleMessageClick(message),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-author\",children:[message.author,\":\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"replies-emojis-container\",children:[message.replies_count!==0&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-replies_count\",children:[message.replies_count,\" Replies\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-emojis-left\",children:message.emojis.map((emoji,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"emoji\",children:emoji},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-emojis\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"emoji\",onClick:()=>reactionTrack(\"ðŸ¤¯\",message.id),children:\"\\uD83E\\uDD2F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"emoji\",onClick:()=>reactionTrack(\"ðŸ‘¿\",message.id),children:\"\\uD83D\\uDC7F\"})]})]},message.id)):/*#__PURE__*/_jsx(\"h3\",{children:\"No messages in this thread\"})});}export default MessageThread;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxs","_jsxs","jsx","_jsx","MessageThread","navigate","channelId","messages","setMessages","userid","sessionStorage","getItem","fetchMessages","intervalId","setInterval","clearInterval","response","fetch","concat","method","headers","data","json","Success","message","console","log","error","handleMessageClick","content","id","reactionTrack","emoji","replyMessageId","body","JSON","stringify","user_id","message_id","className","children","length","map","onClick","author","replies_count","emojis","index"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/MessageThread.jsx"],"sourcesContent":["// MessageThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport '../styles/messageThread.css';\n\nfunction MessageThread() {\n  const navigate = useNavigate();\n  const { channelId } = useParams(); \n  const [messages, setMessages] = useState([]); \n  const userid = sessionStorage.getItem(\"user_id\");\n\n  useEffect(() => {\n    fetchMessages();\n\n    const intervalId = setInterval(fetchMessages, 5000);\n    return () => clearInterval(intervalId);\n  }, [channelId]); \n\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      // console.log(\"data: \", data);\n      if (data.Success) {\n        setMessages(data.message); \n      } else {\n        console.log('Failed to fetch messages');\n      }\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const handleMessageClick = (message) => {\n    console.log(\"Clicked message:\", message.content);\n    navigate(`/channel/${channelId}/message/${message.id}`);\n  };\n\n\n  const reactionTrack = async (emoji, replyMessageId) => {\n    \n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/reactions/post`,{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: userid,\n          message_id: replyMessageId,\n          emoji: emoji\n        }),\n      });\n      const data = await response.json();\n      if (data.Success) {\n        console.log(\"Reactions stored successfully: \", data.error);\n      } else {\n        console.log(\"Failed to save reactions\")\n      }\n    } catch (error) {\n      console.error('Error saving reactions: ', error);\n    }\n  };\n\n  return (\n    <div className=\"message-thread\">\n      {messages.length > 0 ? (\n        messages.map((message) => (\n          <div key={message.id} className=\"message\" onClick={() => handleMessageClick(message)}>\n            <div className=\"message-details\">\n              <div className=\"message-author\">{message.author}:</div>\n              <div className=\"message-content\">{message.content}</div>\n              <div className=\"replies-emojis-container\">\n                {message.replies_count !== 0 && (\n                  <div className=\"message-replies_count\">{message.replies_count} Replies</div>\n                )}\n                <div className=\"message-emojis-left\">\n                  {message.emojis.map((emoji, index) => (\n                    <span key={index} className=\"emoji\">{emoji}</span>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"message-emojis\">\n              <button className='emoji' onClick={() => reactionTrack(\"ðŸ¤¯\", message.id)}>ðŸ¤¯</button>\n              <button className='emoji' onClick={() => reactionTrack(\"ðŸ‘¿\", message.id)}>ðŸ‘¿</button>\n            </div>\n          </div>\n        ))\n      ) : (\n        <h3>No messages in this thread</h3>\n      )}\n    </div>\n  );\n}\n\nexport default MessageThread;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}