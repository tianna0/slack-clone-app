{"ast":null,"code":"// App.jsx\nimport React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import LoginPage from'./components/Login';import UserHome from'./components/UserHome';import Profile from'./components/Profile';import CreateChannel from'./components/CreateChannel';import ChannelContent from'./components/ChannelContent';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[userLoggedIn,setUserLoggedIn]=useState(sessionStorage.getItem(\"user_id\")!=null);// handler for logged in or registered users\nfunction setLogin(userId){setUserLoggedIn(true);sessionStorage.setItem(\"user_id\",userId);// Set a real user id after login\n}useEffect(()=>{// This effect runs once on mount to check if the user is logged in\nconst loggedIn=sessionStorage.getItem(\"user_id\")!=null;setUserLoggedIn(loggedIn);},[]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{onLoginClick:setLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{replace:true,to:userLoggedIn?\"/home\":\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/home\",element:userLoggedIn?/*#__PURE__*/_jsx(UserHome,{}):/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:userLoggedIn?/*#__PURE__*/_jsx(Profile,{}):/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/createChannel\",element:userLoggedIn?/*#__PURE__*/_jsx(CreateChannel,{}):/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/channel/:channelId\",element:userLoggedIn?/*#__PURE__*/_jsx(ChannelContent,{}):/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/channel/:channelId/message/:messageId\",element:userLoggedIn?/*#__PURE__*/_jsx(ChannelContent,{}):/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{replace:true,to:userLoggedIn?\"/home\":\"/login\"})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","LoginPage","UserHome","Profile","CreateChannel","ChannelContent","jsx","_jsx","jsxs","_jsxs","App","userLoggedIn","setUserLoggedIn","sessionStorage","getItem","setLogin","userId","setItem","loggedIn","children","path","element","onLoginClick","replace","to"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/App.js"],"sourcesContent":["// App.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport LoginPage from './components/Login';\nimport UserHome from './components/UserHome';\nimport Profile from './components/Profile';\nimport CreateChannel from './components/CreateChannel';\nimport ChannelContent from './components/ChannelContent';\n\nconst App = () => {\n  const [userLoggedIn, setUserLoggedIn] = useState(sessionStorage.getItem(\"user_id\") != null);\n\n  // handler for logged in or registered users\n  function setLogin(userId) {\n    setUserLoggedIn(true);\n    sessionStorage.setItem(\"user_id\", userId); // Set a real user id after login\n  }\n\n  useEffect(() => {\n    // This effect runs once on mount to check if the user is logged in\n    const loggedIn = sessionStorage.getItem(\"user_id\") != null;\n    setUserLoggedIn(loggedIn);\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        {/* Routes that do not require login */}\n        <Route path=\"/login\" element={<LoginPage onLoginClick={setLogin} />} />\n        <Route path=\"/\" element={<Navigate replace to={userLoggedIn ? \"/home\" : \"/login\"} />} />\n\n        {/* Protected routes that require login */}\n        <Route path=\"/home\" element={userLoggedIn ? <UserHome /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/profile\" element={userLoggedIn ? <Profile /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/createChannel\" element={userLoggedIn ? <CreateChannel /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/channel/:channelId\" element={userLoggedIn ? <ChannelContent /> : <Navigate replace to=\"/login\" />} />\n        <Route path=\"/channel/:channelId/message/:messageId\" element={userLoggedIn ? <ChannelContent /> : <Navigate replace to=\"/login\" />} />\n\n        {/* Redirect all other paths to home if logged in, or login page if not */}\n        <Route path=\"*\" element={<Navigate replace to={userLoggedIn ? \"/home\" : \"/login\"} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}