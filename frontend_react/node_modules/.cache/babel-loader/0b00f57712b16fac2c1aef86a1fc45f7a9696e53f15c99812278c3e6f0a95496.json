{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/CreateChannel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/createChannel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateChannel() {\n  _s();\n  const navigate = useNavigate();\n  const [channelName, setChannelName] = useState('');\n  const [deleteChannelName, setDeleteChannelName] = useState('');\n  async function handleCreateSubmit(event) {\n    event.preventDefault();\n    console.log('Creating channel with name:', channelName);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/create_channel', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          channelName: channelName\n        })\n      });\n      const data = await response.json();\n      console.log(\"data create channel: \", data);\n      if (data.Success) {\n        console.log('Create Chennel Success:', data);\n        navigate('/home');\n      } else {\n        console.log('Create failed');\n      }\n    } catch (error) {\n      console.error('Error during create channel:', error);\n    }\n  }\n  async function handleDeleteSubmit(event) {\n    event.preventDefault();\n    console.log('Deleting channel with name:', deleteChannelName);\n    // Delete\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: sessionStorage.getItem(\"username\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-channel-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"createChannelName\",\n              children: \"Channel Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"createChannelName\",\n              type: \"text\",\n              value: channelName,\n              onChange: e => setChannelName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-channel-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Delete Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDeleteSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"deleteChannelName\",\n              children: \"Channel Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"deleteChannelName\",\n              type: \"text\",\n              value: deleteChannelName,\n              onChange: e => setDeleteChannelName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateChannel, \"kOVChKkgvjncGdfAvVHgE+HF0M4=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateChannel;\nexport default CreateChannel;\nvar _c;\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateChannel","_s","navigate","channelName","setChannelName","deleteChannelName","setDeleteChannelName","handleCreateSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","Success","error","handleDeleteSubmit","children","username","sessionStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","id","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/CreateChannel.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/createChannel.css'; \n\nfunction CreateChannel() {\n    const navigate = useNavigate();\n    const [channelName, setChannelName] = useState('');\n    const [deleteChannelName, setDeleteChannelName] = useState('');\n\n    async function handleCreateSubmit(event) {\n        event.preventDefault();\n        console.log('Creating channel with name:', channelName);\n\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/create_channel', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                channelName: channelName\n              }),\n            });\n            const data = await response.json();\n            console.log(\"data create channel: \", data)\n            if (data.Success) {\n              console.log('Create Chennel Success:', data);\n              navigate('/home'); \n            } else {\n              console.log('Create failed');\n            }\n          } catch (error) {\n            console.error('Error during create channel:', error);\n          }\n    }\n\n    async function handleDeleteSubmit(event) {\n        event.preventDefault();\n        console.log('Deleting channel with name:', deleteChannelName);\n        // Delete\n    }\n\n    return (\n        <>\n            <NavBar username={sessionStorage.getItem(\"username\")} />\n            <div className=\"channel-container\">\n                <div className=\"create-channel-form\">\n                    <h1>Create Channel</h1>\n                    <form onSubmit={handleCreateSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"createChannelName\">Channel Name:</label>\n                            <input\n                                id=\"createChannelName\"\n                                type=\"text\"\n                                value={channelName}\n                                onChange={(e) => setChannelName(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"submit-button\">Create</button>\n                    </form>\n                </div>\n                <div className=\"delete-channel-form\">\n                    <h1>Delete Channel</h1>\n                    <form onSubmit={handleDeleteSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"deleteChannelName\">Channel Name:</label>\n                            <input\n                                id=\"deleteChannelName\"\n                                type=\"text\"\n                                value={deleteChannelName}\n                                onChange={(e) => setDeleteChannelName(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"delete-button\">Delete</button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CreateChannel;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}