{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/ReplyThread.jsx\",\n  _s = $RefreshSig$();\n// ReplyThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/replyThread.css';\nimport LastReply from './LastReply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReplyThread({\n  messageId\n}) {\n  _s();\n  const username = sessionStorage.getItem(\"username\");\n  const userid = sessionStorage.getItem(\"user_id\");\n  const {\n    channelId\n  } = useParams();\n  const [messageDetails, setMessageDetails] = useState(null);\n  const [reply, setReply] = useState('');\n  useEffect(() => {\n    if (messageId) {\n      fetchMessageDetails();\n    }\n  }, [messageId]);\n\n  // for showing thread name and username on the top\n  const fetchMessageDetails = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/messages/${messageId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(\"message data: \", data);\n      if (data.Success) {\n        setMessageDetails(data.message);\n        console.log(\"messageDetails: \", messageDetails);\n      } else {\n        console.log('Failed to fetch message details');\n      }\n    } catch (error) {\n      console.error('Error fetching message details:', error);\n    }\n  };\n  const postReply = async () => {\n    if (!reply.trim()) {\n      alert(\"Please enter a reply.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}/reply`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid: userid,\n          content: reply\n        })\n      });\n      const data = await response.json();\n      if (data.Success) {\n        console.log('Reply posted successfully');\n        setReply('');\n      } else {\n        console.log('Failed to post reply:', data.error);\n      }\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply-thread\",\n    children: messageDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-author\",\n          children: [messageDetails.author, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: messageDetails.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies-container\",\n        children: /*#__PURE__*/_jsxDEV(LastReply, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your reply...\",\n          value: reply,\n          onChange: e => setReply(e.target.value),\n          className: \"reply-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-reply-button\",\n          onClick: postReply,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplyThread, \"yIYg76kQuibihdKnY/uP4JPt8MA=\", false, function () {\n  return [useParams];\n});\n_c = ReplyThread;\nexport default ReplyThread;\nvar _c;\n$RefreshReg$(_c, \"ReplyThread\");","map":{"version":3,"names":["React","useEffect","useState","useParams","LastReply","jsxDEV","_jsxDEV","Fragment","_Fragment","ReplyThread","messageId","_s","username","sessionStorage","getItem","userid","channelId","messageDetails","setMessageDetails","reply","setReply","fetchMessageDetails","response","fetch","method","headers","data","json","console","log","Success","message","error","postReply","trim","alert","body","JSON","stringify","content","className","children","author","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/ReplyThread.jsx"],"sourcesContent":["// ReplyThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/replyThread.css';\nimport LastReply from './LastReply'; \n\nfunction ReplyThread({ messageId }) {\n  const username = sessionStorage.getItem(\"username\");\n  const userid = sessionStorage.getItem(\"user_id\");\n  const { channelId } = useParams();\n  const [messageDetails, setMessageDetails] = useState(null);\n  const [reply, setReply] = useState('');\n\n\n  useEffect(() => {\n    if (messageId) {\n      fetchMessageDetails();\n    }\n  }, [messageId]);\n\n  // for showing thread name and username on the top\n  const fetchMessageDetails = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/messages/${messageId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      console.log(\"message data: \", data)\n      if (data.Success) {\n        setMessageDetails(data.message);\n        console.log(\"messageDetails: \", messageDetails )\n      } else {\n        console.log('Failed to fetch message details');\n      }\n    } catch (error) {\n      console.error('Error fetching message details:', error);\n    }\n  };\n\n\n  const postReply= async () => {\n    if (!reply.trim()) {\n        alert(\"Please enter a reply.\");\n        return;\n    }\n    try {\n        const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}/reply`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                userid: userid, \n                content: reply,\n            }),\n        });\n        const data = await response.json();\n        if (data.Success) {\n            console.log('Reply posted successfully');\n            setReply(''); \n        } else {\n            console.log('Failed to post reply:', data.error);\n        }\n    } catch (error) {\n        console.error('Error posting message:', error);\n    }\n};\n\n  return (\n    <div className=\"reply-thread\">\n      {messageDetails && (\n        <>\n          <div className=\"message-details\">\n            <div className=\"message-author\">{messageDetails.author}:</div>\n            <div className=\"message-content\">{messageDetails.content}</div>\n          </div>\n          <div className=\"replies-container\">\n            <LastReply />\n          </div>\n          <div className=\"reply-input-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Type your reply...\"\n              value={reply}\n              onChange={(e) => setReply(e.target.value)}\n              className=\"reply-input\"\n            />\n            <button className=\"send-reply-button\" onClick={postReply}>Send</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ReplyThread;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}