{"ast":null,"code":"// MessageThread.jsx\nimport React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{useParams}from'react-router-dom';import'../styles/lastReply.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LastReply(){// const navigate = useNavigate();\nconst username=sessionStorage.getItem(\"username\");const apiKey=sessionStorage.getItem(\"\".concat(username,\"_api_key\"));const userid=sessionStorage.getItem(\"user_id\");const{channelId,messageId}=useParams();const[replies,setReplies]=useState([]);useEffect(()=>{fetchReplies();// Set up an interval to fetch messages every 500ms\nconst intervalId=setInterval(fetchReplies,5000);// Cleanup function to clear the interval when the component unmounts\n// or if the channelId changes\nreturn()=>clearInterval(intervalId);},[messageId]);const fetchReplies=async()=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/channels/\".concat(channelId,\"/messages/\").concat(messageId,\"/get\"),{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();if(data.Success){console.log(\"replies: \",data.replies);setReplies(data.replies);}else{console.log('Failed to fetch replies');}}catch(error){console.error('Error fetching replies:',error);}};const reactionTrack=async(emoji,replyMessageId)=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/reactions/post\",{method:'POST',headers:{'Content-Type':'application/json','X-API-Key':apiKey},body:JSON.stringify({user_id:userid,message_id:replyMessageId,emoji:emoji})});const data=await response.json();if(data.Success){console.log(\"Reactions stored successfully: \",data.error);}else{console.log(\"Failed to save reactions\");}}catch(error){console.error('Error saving reactions: ',error);}};// for hovering emojis display user names\nconst[tooltip,setTooltip]=useState({visible:false,users:[],position:{x:0,y:0}});const fetchReactionUsers=async(emoji,messageId,event)=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/reactions/\".concat(messageId,\"/\").concat(encodeURIComponent(emoji)),{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();if(data.Success){setTooltip({visible:true,users:data.users,position:{x:event.clientX,y:event.clientY}});console.log(\"users: \",data.users);}else{console.log(\"Failed to fetch users for reaction\");}}catch(error){console.error('Error fetching users for reaction: ',error);}};const Tooltip=_ref=>{let{users,position}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"tooltip\",style:{position:'absolute',top:position.y,left:position.x,backgroundColor:'white',border:'1px solid black',padding:'10px',borderRadius:'5px',display:'flex',flexDirection:'column',zIndex:100},children:users.map((user,index)=>/*#__PURE__*/_jsx(\"span\",{children:user},index))});};return/*#__PURE__*/_jsxs(\"div\",{className:\"reply-thread\",children:[tooltip.visible&&/*#__PURE__*/_jsx(Tooltip,{users:tooltip.users,position:tooltip.position}),replies.length>0?replies.map(reply=>/*#__PURE__*/_jsxs(\"div\",{className:\"reply\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reply-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reply-author\",children:[reply.author,\":\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"reply-content\",children:reply.content}),/*#__PURE__*/_jsx(\"div\",{className:\"replies-emojis-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"replies-emojis-left\",children:[...new Set(reply.emojis)].map((emoji,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"emoji\",onMouseEnter:e=>fetchReactionUsers(emoji,reply.id,e),onMouseLeave:()=>setTooltip({...tooltip,visible:false}),children:emoji},index))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"reply-emojis\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"emoji\",onClick:()=>reactionTrack(\"ðŸ¤¯\",reply.id),children:\"\\uD83E\\uDD2F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"emoji\",onClick:()=>reactionTrack(\"ðŸ‘¿\",reply.id),children:\"\\uD83D\\uDC7F\"})]})]},reply.id)):/*#__PURE__*/_jsx(\"h3\",{children:\"No replies in this thread\"})]});}export default LastReply;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsx","_jsx","jsxs","_jsxs","LastReply","username","sessionStorage","getItem","apiKey","concat","userid","channelId","messageId","replies","setReplies","fetchReplies","intervalId","setInterval","clearInterval","response","fetch","method","headers","data","json","Success","console","log","error","reactionTrack","emoji","replyMessageId","body","JSON","stringify","user_id","message_id","tooltip","setTooltip","visible","users","position","x","y","fetchReactionUsers","event","encodeURIComponent","clientX","clientY","Tooltip","_ref","className","style","top","left","backgroundColor","border","padding","borderRadius","display","flexDirection","zIndex","children","map","user","index","length","reply","author","content","Set","emojis","onMouseEnter","e","id","onMouseLeave","onClick"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/LastReply.jsx"],"sourcesContent":["// MessageThread.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport '../styles/lastReply.css';\n\nfunction LastReply() {\n  // const navigate = useNavigate();\n  const username = sessionStorage.getItem(\"username\");\n  const apiKey = sessionStorage.getItem(`${username}_api_key`);\n  const userid = sessionStorage.getItem(\"user_id\");\n  const { channelId, messageId } = useParams(); \n  const [replies, setReplies] = useState([]); \n\n\n  useEffect(() => {\n    fetchReplies();\n\n    // Set up an interval to fetch messages every 500ms\n    const intervalId = setInterval(fetchReplies, 5000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    // or if the channelId changes\n    return () => clearInterval(intervalId);\n  }, [messageId]); \n\n\n  const fetchReplies = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}/get`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (data.Success) {\n        console.log(\"replies: \", data.replies)\n        setReplies(data.replies); \n      } else {\n        console.log('Failed to fetch replies');\n      }\n    } catch (error) {\n      console.error('Error fetching replies:', error);\n    }\n  };\n\n  const reactionTrack = async (emoji, replyMessageId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/reactions/post`,{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-Key': apiKey\n        },\n        body: JSON.stringify({\n          user_id: userid,\n          message_id: replyMessageId,\n          emoji: emoji\n        }),\n      });\n      const data = await response.json();\n      if (data.Success) {\n        console.log(\"Reactions stored successfully: \", data.error);\n      } else {\n        console.log(\"Failed to save reactions\")\n      }\n    } catch (error) {\n      console.error('Error saving reactions: ', error);\n    }\n  };\n\n\n// for hovering emojis display user names\nconst [tooltip, setTooltip] = useState({ visible: false, users: [], position: { x: 0, y: 0 } });\n\nconst fetchReactionUsers = async (emoji, messageId, event) => {\n  try {\n    const response = await fetch(`http://127.0.0.1:5000/api/reactions/${messageId}/${encodeURIComponent(emoji)}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await response.json();\n    if (data.Success) {\n      setTooltip({\n        visible: true,\n        users: data.users,\n        position: { x: event.clientX, y: event.clientY }\n      });\n      console.log(\"users: \", data.users)\n    } else {\n      console.log(\"Failed to fetch users for reaction\");\n    }\n  } catch (error) {\n    console.error('Error fetching users for reaction: ', error);\n  }\n};\n\nconst Tooltip = ({ users, position }) => {\n  return (\n    <div className=\"tooltip\" style={{ \n      position: 'absolute', \n      top: position.y, \n      left: position.x, \n      backgroundColor: 'white', \n      border: '1px solid black', \n      padding: '10px', \n      borderRadius: '5px', \n      display: 'flex', \n      flexDirection: 'column', \n      zIndex: 100 \n      }}>\n      {users.map((user, index) => (\n        <span key={index}>{user}</span>\n      ))}\n    </div>\n  );\n};\n\n\n\n  return (\n    <div className=\"reply-thread\">\n      {tooltip.visible && <Tooltip users={tooltip.users} position={tooltip.position} />}\n      {replies.length > 0 ? (\n        replies.map((reply) => (\n          <div key={reply.id} className=\"reply\">\n            <div className=\"reply-details\">\n              <div className=\"reply-author\">{reply.author}:</div>\n              <div className=\"reply-content\">{reply.content}</div>\n              <div className=\"replies-emojis-container\">\n                <div className=\"replies-emojis-left\">\n                  {/* {reply.emojis.map((emoji, index) => (\n                    <span key={index} className=\"emoji\">{emoji}</span>\n                  ))} */}\n                  {[...new Set(reply.emojis)].map((emoji, index) => (\n                    <span key={index} className=\"emoji\" onMouseEnter={(e) => fetchReactionUsers(emoji, reply.id, e)} onMouseLeave={() => setTooltip({ ...tooltip, visible: false })}>\n                      {emoji}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"reply-emojis\">\n              <button className='emoji' onClick={() => reactionTrack(\"ðŸ¤¯\", reply.id)}>ðŸ¤¯</button>\n              <button className='emoji' onClick={() => reactionTrack(\"ðŸ‘¿\", reply.id)}>ðŸ‘¿</button>\n            </div>\n          </div>\n        ))\n      ) : (\n        <h3>No replies in this thread</h3>\n      )}\n    </div>\n  );\n}\n\nexport default LastReply;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}