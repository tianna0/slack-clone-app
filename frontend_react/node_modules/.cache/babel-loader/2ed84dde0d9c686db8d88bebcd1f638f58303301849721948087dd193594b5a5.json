{"ast":null,"code":"var _jsxFileName = \"/Users/wangchenhui/Desktop/final_project_belay/react/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [newName, setNewName] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const username = sessionStorage.getItem(\"username\");\n  const apiKey = sessionStorage.getItem(`${username}_api_key`); // Assuming the API key is stored in sessionStorage\n\n  const updateUsername = async e => {\n    e.preventDefault(); // Prevent the form from causing a page reload\n    if (!newName) {\n      setMessage(\"Please enter a new username.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/update_username', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          api_key: apiKey,\n          new_name: newName\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message);\n      if (data.success) {\n        // Before updating sessionStorage, remove the old username's API key\n        const oldApiKeyKeyName = `${username}_api_key`;\n        sessionStorage.removeItem(oldApiKeyKeyName); // Remove the old API key\n\n        // Now update the sessionStorage with the new username and API key\n        sessionStorage.setItem('username', newName);\n        sessionStorage.setItem(`${newName}_api_key`, apiKey);\n        console.log(\"Session updated: \", sessionStorage);\n        // navigate('/some-other-page'); // Redirect the user to another page if needed\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setMessage(\"Failed to update username. Please try again.\");\n    }\n  };\n  const updatePassword = async e => {\n    e.preventDefault();\n    if (!newPassword || !confirmPassword || newPassword !== confirmPassword) {\n      setMessage(\"Passwords do not match or are missing.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/update_password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          api_key: apiKey,\n          new_password: newPassword,\n          confirm_password: confirmPassword\n        })\n      });\n      const data = await response.json();\n      console.log(\"session: \", sessionStorage);\n      setMessage(data.message);\n      if (data.success) {\n        console.log(\"success updated password\");\n        // Handle successful password update, e.g., clear form, redirect, etc.\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n      setMessage(\"Failed to update password. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is the Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateUsername,\n      className: \"update-username-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newName,\n          onChange: e => setNewName(e.target.value),\n          placeholder: \"Enter new username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePassword,\n      className: \"update-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"fPS2RD+/zX6G5A50dUwrbLjlB3c=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","jsxDEV","_jsxDEV","Profile","_s","newName","setNewName","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","username","sessionStorage","getItem","apiKey","updateUsername","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","api_key","new_name","data","json","success","oldApiKeyKeyName","removeItem","setItem","console","log","error","updatePassword","new_password","confirm_password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/Profile.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport '../styles/profile.css'; \n\nfunction Profile() {\n    const [newName, setNewName] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const username = sessionStorage.getItem(\"username\");\n    const apiKey = sessionStorage.getItem(`${username}_api_key`); // Assuming the API key is stored in sessionStorage\n\n\n    const updateUsername = async (e) => {\n      e.preventDefault(); // Prevent the form from causing a page reload\n      if (!newName) {\n          setMessage(\"Please enter a new username.\");\n          return;\n      }\n      try {\n          const response = await fetch('http://127.0.0.1:5000/api/update_username', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                  api_key: apiKey,\n                  new_name: newName,\n              }),\n          });\n  \n          const data = await response.json();\n          setMessage(data.message);\n          if (data.success) {\n              // Before updating sessionStorage, remove the old username's API key\n              const oldApiKeyKeyName = `${username}_api_key`;\n              sessionStorage.removeItem(oldApiKeyKeyName); // Remove the old API key\n              \n              // Now update the sessionStorage with the new username and API key\n              sessionStorage.setItem('username', newName);\n              sessionStorage.setItem(`${newName}_api_key`, apiKey);\n              \n              console.log(\"Session updated: \", sessionStorage);\n              // navigate('/some-other-page'); // Redirect the user to another page if needed\n          }\n      } catch (error) {\n          console.error('Error updating username:', error);\n          setMessage(\"Failed to update username. Please try again.\");\n      }\n  };\n  \n\n\n    const updatePassword = async (e) => {\n      e.preventDefault();\n      if (!newPassword || !confirmPassword || newPassword !== confirmPassword) {\n          setMessage(\"Passwords do not match or are missing.\");\n          return;\n      }\n      try {\n          const response = await fetch('http://127.0.0.1:5000/api/update_password', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                  api_key: apiKey,\n                  new_password: newPassword,\n                  confirm_password: confirmPassword,\n              }),\n          });\n          \n          const data = await response.json();\n          console.log(\"session: \", sessionStorage)\n          setMessage(data.message);\n          if (data.success) {\n              console.log(\"success updated password\")\n              // Handle successful password update, e.g., clear form, redirect, etc.\n          }\n      } catch (error) {\n          console.error('Error updating password:', error);\n          setMessage(\"Failed to update password. Please try again.\");\n      }\n  };\n\n\n    return (\n        <div className=\"profile-container\">\n            <NavBar username={username} />\n            <h1>This is the Profile</h1>\n            <form onSubmit={updateUsername} className=\"update-username-form\">\n                <label>\n                    New Username:\n                    <input\n                        type=\"text\"\n                        value={newName}\n                        onChange={(e) => setNewName(e.target.value)}\n                        placeholder=\"Enter new username\"\n                    />\n                </label>\n                <button type=\"submit\">Update Username</button>\n            </form>\n            <form onSubmit={updatePassword} className=\"update-password-form\">\n                <label>\n                    New Password:\n                    <input\n                        type=\"password\"\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                        placeholder=\"New password\"\n                    />\n                </label>\n                <label>\n                    Confirm Password:\n                    <input\n                        type=\"password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        placeholder=\"Confirm new password\"\n                    />\n                </label>\n                <button type=\"submit\">Update Password</button>\n            </form>\n            {message && <p>{message}</p>}\n        </div>\n    );\n}\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}