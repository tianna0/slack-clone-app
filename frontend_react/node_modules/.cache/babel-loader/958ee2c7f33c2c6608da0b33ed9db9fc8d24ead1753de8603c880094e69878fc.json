{"ast":null,"code":"// ChannelContent.jsx\nimport React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import NavBar from'./NavBar';import ChannelList from'./ChannelList';import MessageThread from'./MessageThread';import ReplyThread from'./ReplyThread';import'../styles/channelContent.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChannelContent(){const username=sessionStorage.getItem(\"username\");const userid=sessionStorage.getItem(\"user_id\");const{channelId,messageId}=useParams();const[channelName,setChannelName]=useState('');const[message,setMessage]=useState('');const[showReplyThread,setShowReplyThread]=useState(true);useEffect(()=>{fetchChannelDetails();setShowReplyThread(false);},[channelId]);const toggleReplyThreadVisibility=()=>{setShowReplyThread(!showReplyThread);};const fetchChannelDetails=async()=>{try{const response=await fetch(\"http://127.0.0.1:5000/api/channel/\".concat(channelId),{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();if(data.Success){setChannelName(data.message.name);}else{console.log('Channel not found');}}catch(error){console.error('Error fetching channel details:',error);}};const postMessage=async()=>{if(!message.trim()){alert(\"Please enter a message.\");return;}try{const response=await fetch(\"http://127.0.0.1:5000/api/channels/\".concat(channelId,\"/messages/post\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userid:userid,content:message})});const data=await response.json();if(data.Success){console.log('Message posted successfully');setMessage('');}else{console.log('Failed to post message:',data.error);}}catch(error){console.error('Error posting message:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"home-container\",children:[/*#__PURE__*/_jsx(NavBar,{username:username}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(ChannelList,{className:\"channel-list\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channel-name\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Channel: \",channelName]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleReplyThreadVisibility,className:\"toggle-reply-thread\",children:showReplyThread?'Hide Replies':'Show Replies'})]}),/*#__PURE__*/_jsx(MessageThread,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type a message...\",className:\"message-input\",value:message,onChange:e=>setMessage(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"post-message-button\",onClick:postMessage,children:\"Send\"})]})]}),showReplyThread&&/*#__PURE__*/_jsx(ReplyThread,{className:\"reply-thread\",messageId:messageId})]})]});}export default ChannelContent;","map":{"version":3,"names":["React","useEffect","useState","useParams","NavBar","ChannelList","MessageThread","ReplyThread","jsx","_jsx","jsxs","_jsxs","ChannelContent","username","sessionStorage","getItem","userid","channelId","messageId","channelName","setChannelName","message","setMessage","showReplyThread","setShowReplyThread","fetchChannelDetails","toggleReplyThreadVisibility","response","fetch","concat","method","headers","data","json","Success","name","console","log","error","postMessage","trim","alert","body","JSON","stringify","content","className","children","onClick","type","placeholder","value","onChange","e","target"],"sources":["/Users/wangchenhui/Desktop/final_project_belay/react/src/components/ChannelContent.jsx"],"sourcesContent":["// ChannelContent.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport ChannelList from './ChannelList';\nimport MessageThread from './MessageThread'; \nimport ReplyThread from './ReplyThread'; \nimport '../styles/channelContent.css';\n\nfunction ChannelContent() {\n    const username = sessionStorage.getItem(\"username\");\n    const userid = sessionStorage.getItem(\"user_id\");\n    const { channelId, messageId } = useParams();\n    const [channelName, setChannelName] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [showReplyThread, setShowReplyThread] = useState(true);\n\n    useEffect(() => {\n        fetchChannelDetails();\n        setShowReplyThread(false);\n    }, [channelId]); \n\n    const toggleReplyThreadVisibility = () => {\n        setShowReplyThread(!showReplyThread);\n    };\n\n    const fetchChannelDetails = async () => {\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/api/channel/${channelId}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const data = await response.json();\n            if (data.Success) {\n                setChannelName(data.message.name); \n            } else {\n                console.log('Channel not found');\n            }\n        } catch (error) {\n            console.error('Error fetching channel details:', error);\n        }\n    };\n\n\n    const postMessage = async () => {\n        if (!message.trim()) {\n            alert(\"Please enter a message.\");\n            return;\n        }\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/post`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    userid: userid, \n                    content: message,\n                }),\n            });\n            const data = await response.json();\n            if (data.Success) {\n                console.log('Message posted successfully');\n                setMessage(''); \n            } else {\n                console.log('Failed to post message:', data.error);\n            }\n        } catch (error) {\n            console.error('Error posting message:', error);\n        }\n    };\n\n\n\n    return (\n        <div className=\"home-container\">\n            <NavBar username={username} />\n            <div className=\"main-content\">\n                <ChannelList className=\"channel-list\"/>\n                <div className=\"channel-content\">\n                    <div className=\"channel-name\">\n                        <h2>Channel: {channelName}</h2>\n                        <button onClick={toggleReplyThreadVisibility} className=\"toggle-reply-thread\">\n                            {showReplyThread ? 'Hide Replies' : 'Show Replies'}\n                        </button>\n                    </div>\n                    <MessageThread />\n                    <div className=\"message-input-container\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Type a message...\"\n                            className=\"message-input\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                        />\n                        <button className=\"post-message-button\" onClick={postMessage}>Send</button>\n                    </div>\n                </div>\n                {showReplyThread && <ReplyThread className=\"reply-thread\" messageId={messageId}/>} \n            </div>\n        </div>\n    );\n}\n\nexport default ChannelContent;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}